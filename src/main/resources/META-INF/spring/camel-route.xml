<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://camel.apache.org/schema/spring
                        http://camel.apache.org/schema/spring/camel-spring.xsd">

<!-- Configures the Camel Context-->
<camel:camelContext xmlns="http://camel.apache.org/schema/spring">
    <!-- here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag)
         then performs content based routing on the message using XPath -->
    <camel:route trace="true">
      <camel:from uri="file:src/data?noop=true"/>
      <camel:choice>
        <camel:when>
          <camel:xpath>/person/city = 'London'</camel:xpath>
          <camel:log message="UK message"/>
          <camel:to uri="file:target/messages/uk"/>
        </camel:when>
        <camel:otherwise>
          <camel:log message="Other message"/>
          <camel:to uri="file:target/messages/others"/>
        </camel:otherwise>
      </camel:choice>

      <!-- Prior to sending to Hibernate endpoint, unmarshal the XML into POJO via JAXB -->
      <camel:unmarshal>
        <jaxb prettyPrint="true" contextPath="org.bitpimp.camelHibernate"/>
      </camel:unmarshal>
      <camel:to uri="hibernate:org.bitpimp.camelHibernate.Person"/>
      <camel:stop/>
    </camel:route>
  </camel:camelContext>

  <import resource="spring-context.xml"/>
 </beans>